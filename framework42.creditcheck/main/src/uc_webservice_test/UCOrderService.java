
package uc_webservice_test;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "UCOrderService", targetNamespace = "http://webservices.uc.se/UCOrders/", wsdlLocation = "file:/home/fredrik/IdeaProjects/framework42/framework42.creditcheck/main/src/uc_webservice_test/UCOrders_test.wsdl")
public class UCOrderService
    extends Service
{

    private final static URL UCORDERSERVICE_WSDL_LOCATION;
    private final static WebServiceException UCORDERSERVICE_EXCEPTION;
    private final static QName UCORDERSERVICE_QNAME = new QName("http://webservices.uc.se/UCOrders/", "UCOrderService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/fredrik/IdeaProjects/framework42/framework42.creditcheck/main/src/uc_webservice_test/UCOrders_test.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UCORDERSERVICE_WSDL_LOCATION = url;
        UCORDERSERVICE_EXCEPTION = e;
    }

    public UCOrderService() {
        super(__getWsdlLocation(), UCORDERSERVICE_QNAME);
    }

    public UCOrderService(WebServiceFeature... features) {
        super(__getWsdlLocation(), UCORDERSERVICE_QNAME, features);
    }

    public UCOrderService(URL wsdlLocation) {
        super(wsdlLocation, UCORDERSERVICE_QNAME);
    }

    public UCOrderService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, UCORDERSERVICE_QNAME, features);
    }

    public UCOrderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UCOrderService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UcOrders
     */
    @WebEndpoint(name = "ucOrders2")
    public UcOrders getUcOrders2() {
        return super.getPort(new QName("http://webservices.uc.se/UCOrders/", "ucOrders2"), UcOrders.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UcOrders
     */
    @WebEndpoint(name = "ucOrders2")
    public UcOrders getUcOrders2(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices.uc.se/UCOrders/", "ucOrders2"), UcOrders.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UCORDERSERVICE_EXCEPTION!= null) {
            throw UCORDERSERVICE_EXCEPTION;
        }
        return UCORDERSERVICE_WSDL_LOCATION;
    }

}
